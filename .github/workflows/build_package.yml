name: Build Package

on:
  push:
    tags:
      - v*

jobs:
  build_package:
    name: Build Package by Rye
    runs-on: ubuntu-latest
    container: catthehacker/ubuntu:act-20.04

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      # - name: Setup MTK Certification
      #   uses: https://gitea.mediatek.inc/actions/mtk-cert-action@v1.0.0

      # - name: Setup SSH Key
      #   uses: shimataro/ssh-key-action@v2.7.0
      #   with:
      #     key: ${{ secrets.SSH_KEY }}
      #     name: id_rsa
      #     known_hosts: unnecessary
      #     config: |
      #       Host *
      #         StrictHostKeyChecking no
      #         UserKnownHostsFile=/dev/null
      #     if_key_exists: replace

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: 'recursive'

      - name: Setup Rye
        uses: mai0313/setup-rye@master
        with:
          version: 'latest' # Optional, default is latest
          toolchain_version: '3.10' # Optional, default is 3.10
          python_version: '3.10' # Optional, default is 3.10
          use-uv: 'true' # Optional, default is true
          pypi_source: 'https://pypi.org/simple' # Optional
          http_proxy: ${{ secrets.HTTP_PROXY }} # Optional
          https_proxy: ${{ secrets.HTTPS_PROXY }} # Optional

      - name: Get the version
        id: metadata
        uses: battila7/get-version-action@v2

      - name: Update Version
        shell: bash
        run: |
          if [[ ! "$GITHUB_REF" =~ ^refs/tags/v ]]; then
            VERSION=$(date +%Y.%m.%d)
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Package
        run: |
          sed -i 's/virtual = true/virtual = false/' pyproject.toml
          rye version $VERSION
          rye build --clean

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          path: ./dist/*
          name: ${{ github.event.repository.name }}-packages
          if-no-files-found: ignore
          retention-days: 7
          compression-level: 6
          overwrite: true

      - name: Upload Release Assets
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        # continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./dist/*
